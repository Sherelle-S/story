thats that pain


// Variables to manage timers
let idleTimeout;
let sessionTimeout;
let warningTimeout;
const logoutURL = "logout.aspx";
const sessionDuration = 9 * 60 * 60 * 1000; // 9 hours in milliseconds
const warningDuration = 30 * 60 * 1000; // 30 minutes in milliseconds
const idleTimer = 60 * 60 * 1000; // 60 minutes in milliseconds

// Initialize last activity from localStorage or current time
let lastActivity = localStorage.getItem("lastActivity") ? parseInt(localStorage.getItem("lastActivity")) : Date.now();

// Function to handle user logout
function logout() {
    console.log("Logging out due to inactivity or session timeout.");
    window.location.href = logoutURL;
}

// Reset idle timer
function resetIdleTimer() {
    clearTimeout(idleTimeout);

    idleTimeout = setTimeout(function() {
        logout();
    }, idleTimer);

    lastActivity = Date.now();
    localStorage.setItem("lastActivity", lastActivity);
    console.log("Idle timer reset.");
}

// Start session timer
function startSessionTimer() {
    const elapsedTime = Date.now() - lastActivity;
    const sessionTimeoutMs = sessionDuration - elapsedTime;
    const warningTimeoutMs = sessionTimeoutMs - warningDuration;

    clearTimeout(sessionTimeout);
    clearTimeout(warningTimeout);

    if (sessionTimeoutMs <= 0) {
        logout();
    } else {
        sessionTimeout = setTimeout(function() {
            logout();
        }, sessionTimeoutMs);

        if (warningTimeoutMs > 0) {
            warningTimeout = setTimeout(function() {
                alert("Your session will expire in 30 minutes. Please save your work.");
            }, warningTimeoutMs);
        }
    }
}

// Track activity events
function trackActivity() {
    document.body.addEventListener("mousemove", resetIdleTimer);
    document.body.addEventListener("keydown", resetIdleTimer);
    document.body.addEventListener("click", resetIdleTimer);
    document.body.addEventListener("scroll", resetIdleTimer);
    document.body.addEventListener("touchstart", resetIdleTimer);
}

// Log remaining time until logout every second
function logRemainingTime() {
    setInterval(function() {
        const now = Date.now();
        const idleTimeRemaining = idleTimer - (now - lastActivity);
        const sessionTimeRemaining = sessionDuration - (now - lastActivity);

        console.log("Seconds until inactivity logout: " + Math.floor(idleTimeRemaining / 1000));
        console.log("Seconds until session logout: " + Math.floor(sessionTimeRemaining / 1000));
    }, 1000);
}

function startTimers() {
    resetIdleTimer();
    startSessionTimer();
    trackActivity();
    logRemainingTime();
}

// Check if the page was just refreshed
if (performance.navigation.type === performance.navigation.TYPE_RELOAD) {
    // Reset timers on page reload
    const elapsedTime = Date.now() - lastActivity;
    if (elapsedTime < idleTimer) {
        resetIdleTimer();
    }
    if (elapsedTime < sessionDuration) {
        startSessionTimer();
    }
} else {
    startTimers();
}
